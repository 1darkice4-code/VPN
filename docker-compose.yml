version: "3.8"

services:
  db:
    image: postgres:12
    container_name: vpn_db
    restart: always
    environment:
      POSTGRES_DB: vpn_bot_db
      POSTGRES_USER: vpn_bot_user
      POSTGRES_PASSWORD: post123
    volumes:
      - db_data:/var/lib/postgresql/data

  vpn_bot:
    build: ./vpn_bot
    container_name: vpn_bot
    depends_on:
      - db
      - wg
    env_file:
      - ./vpn_bot/.env
    volumes:
      - ./wg_configs:/app/wg_configs
      - ./wg:/wg
    working_dir: /app
    command: python bot.py

  wg:
    image: linuxserver/wireguard
    container_name: wg
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - ./wg:/config
    ports:
      - "51830:51830/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  wgrest:
    build: ./wgrest
    container_name: wgrest
    ports:
      - "5000:5000"
    environment:
      WG_CONFIG_PATH: /config
      WGREST_DATA_DIR: /var/lib/wgrest
    volumes:
      - ./wg:/config
      - wgrest_data:/var/lib/wgrest
    user: "1000:1000"   # UID:GID пользователя контейнера (можно уточнить через `docker exec -it wgrest id`)
    restart: unless-stopped

volumes:
  db_data:
  wgrest_data:
  